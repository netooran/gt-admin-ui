{"version":3,"sources":["shared/Containers/Containers.js","shared/Spinner/Spinner.js","constants.js","shared/Tooltip/Tooltip.js","shared/Input/Input.js","shared/Table/Header/Header.js","shared/Button/Button.js","shared/ButtonGroup/ButtonGroup.js","utils/utils/utils.js","shared/Table/Pagination/Pagination.js","shared/Table/Footer/Footer.js","shared/Table/Row/Row.js","shared/Table/HeaderRow/HeaderRow.js","shared/Table/Table.js","utils/validators/validators.js","utils/resource/resource.js","repository/users/users.js","shared/ErrorBoundary/ErrorBoundary.js","App.js","reportWebVitals.js","index.js"],"names":["ViewPort","styled","div","Center","Flex","Row","Wrapper","Spinner","aria-label","AppConstants","tootipActiveTime","showTooltip","Tooltip","message","children","showTooltipOnLoad","useState","setShowTooltip","useEffect","setTimeout","readonlyStyles","css","readonly","padding","error","StyledInput","input","Input","initialValue","type","autoFocus","role","onChange","props","value","setValue","ref","useRef","current","focus","select","event","target","Header","options","search","searchPlaceholderText","searchable","placeholder","defaultStyles","dangerStyles","solidStyles","outlineStyles","ghostStyles","iconStyles","disabledStyles","roundStyles","StyledButton","button","importance","variant","shape","disabled","Button","ButtonGroup","FunctionUtils","arg","StringUtils","str","replace","c","toUpperCase","ArrayUtils","limit","Array","keys","slice","Pagination","page","noOfpages","goto","noOfPagesToDisplay","hasPrevious","hasNext","onClick","offset","getPages","map","pageNumber","i","Footer","setPage","hasSelection","removeSelected","deletable","paginatable","isTableNotEmpty","StyledRow","tr","isSelected","data","columns","save","remove","rowData","setRowData","isEditing","setIsEditing","errors","setErrors","editable","selectable","enabledActions","name","icon","enabled","isValid","validationErrors","forEach","validate","valid","filter","checked","id","HeaderRow","selectAll","isChecked","setIsChecked","restOfOptions","hasActions","Object","values","some","column","StyledTable","table","Message","Table","dataResource","pageSize","read","setData","filteredData","setFilteredData","Set","selectedRows","setSelectedRows","pageData","useMemo","rowId","selection","add","delete","row","dataRow","columnNames","join","searchString","cellValue","match","length","size","has","Math","ceil","getValidator","validateFns","field","result","every","validateFn","validators","isNotEmpty","isValidEmail","test","isValidUserRole","includes","toLowerCase","createResource","promise","status","suspender","then","fetchUsers","a","fetch","response","json","ErrorBoundary","state","hasError","this","React","Component","TableWrapper","App","userResource","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f05c8234.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ViewPort = styled.div`\n  width: 100vw;\n  height: 100vh;\n`;\n\nexport const Center = styled.div`\n  display: grid;\n  place-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Flex = styled.div`\n  display: flex;\n`;\n\nexport const Row = styled(Flex)`\n  flex-direction: row;\n`;\n\nexport const Column = styled(Flex)`\n  flex-direction: column;\n`;\n","import { Loader } from '@styled-icons/boxicons-regular';\nimport styled from 'styled-components';\nimport { Center } from '../Containers/Containers';\n\nconst Wrapper = styled(Center)`\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n\n  animation: spin 2s linear infinite;\n\n  svg {\n    width: 3rem;\n  }\n`;\n\nconst Spinner = () => {\n  return (\n    <Wrapper aria-label=\"Loading\">\n      <Loader />\n    </Wrapper>\n  );\n};\n\nexport default Spinner;\n","export const AppConstants = {\n  tootipActiveTime: 3000,\n};\n\nexport default AppConstants;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport AppConstants from '../../constants';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: inline-block;\n  padding: 0.5rem 0;\n  font-size: 0.75rem;\n\n  & span {\n    visibility: ${({ showTooltip }) => (showTooltip ? 'visible' : 'hidden')};\n    width: 120px;\n    background-color: black;\n    color: #fff;\n    text-align: center;\n    padding: 0.5rem;\n    border-radius: 6px;\n    top: 100%;\n    left: 50%;\n    margin-left: -60px;\n\n    position: absolute;\n    z-index: 1;\n  }\n\n  &:hover span {\n    visibility: visible;\n  }\n\n  & span::after {\n    content: ' ';\n    position: absolute;\n    bottom: 100%;\n    left: 50%;\n    margin-left: -12px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent black transparent;\n  }\n`;\n\nconst Tooltip = ({ message, children, showTooltipOnLoad = false }) => {\n  const [showTooltip, setShowTooltip] = useState(showTooltipOnLoad);\n\n  useEffect(() => {\n    showTooltip &&\n      setTimeout(() => setShowTooltip(false), AppConstants.tootipActiveTime);\n  }, [showTooltip]);\n\n  return (\n    <Wrapper showTooltip={showTooltip}>\n      {children}\n      <span>{message}</span>\n    </Wrapper>\n  );\n};\n\nTooltip.propTypes = {\n  message: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  showTooltipOnLoad: PropTypes.bool,\n};\n\nexport default Tooltip;\n","import PropTypes from 'prop-types';\nimport { useEffect, useRef, useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Row } from '../Containers/Containers';\nimport { ErrorCircle } from '@styled-icons/boxicons-solid';\nimport Tooltip from '../Tooltip/Tooltip';\n\nconst readonlyStyles = css`\n  background-color: transparent;\n  pointer-events: none;\n`;\n\nconst Wrapper = styled(Row)`\n  justify-content: space-between;\n  border: 1px solid ${({ readonly }) => (readonly ? 'transparent' : '#d8d8d8')};\n  border-radius: 0.2rem;\n  background-color: white;\n  min-width: 250px;\n\n  :focus-within {\n    border: 1px solid #1890ff;\n  }\n\n  ${({ padding }) => padding && `padding: ${padding};`}\n  ${({ readonly }) => readonly && readonlyStyles}\n  ${({ error }) => error && 'border: 1px solid red;'}\n\n  svg {\n    fill: red;\n    width: 1.2rem;\n    padding: 0 0.5rem;\n  }\n`;\n\nconst StyledInput = styled.input`\n  border-style: none;\n  border-radius: 0.2rem;\n  padding: 0.5rem;\n  width: 100%;\n\n  :focus {\n    outline: none;\n  }\n\n  ${({ readonly }) => readonly && readonlyStyles}\n`;\n\nconst Input = ({\n  initialValue = '',\n  type = 'text',\n  error,\n  autoFocus,\n  role = 'textbox',\n  onChange,\n  ...props\n}) => {\n  const [value, setValue] = useState(initialValue);\n  const ref = useRef(null);\n\n  useEffect(() => {\n    onChange(value);\n  }, [value]);\n\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus();\n      ref.current.select();\n    }\n  }, [ref.current, autoFocus]);\n\n  return (\n    <Wrapper error={!!error} {...props}>\n      <StyledInput\n        ref={ref}\n        type={type}\n        role={role}\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n        {...props}\n      />\n      {error && (\n        <Tooltip message={error} showTooltipOnLoad>\n          <ErrorCircle />\n        </Tooltip>\n      )}\n    </Wrapper>\n  );\n};\n\nInput.propTypes = {\n  initialValue: PropTypes.string,\n  type: PropTypes.string,\n  placeholder: PropTypes.string,\n  readonly: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  role: PropTypes.string,\n  error: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Input from 'shared/Input/Input';\n\nconst Wrapper = styled.div`\n  padding: 1rem;\n`;\n\nconst Header = ({ options, search, searchPlaceholderText = 'Search...' }) => {\n  const { searchable } = options;\n\n  return (\n    <Wrapper>\n      {searchable && (\n        <Input\n          type=\"text\"\n          role=\"search\"\n          aria-label=\"Search\"\n          placeholder={searchPlaceholderText}\n          onChange={search}\n          padding=\".25rem 1rem\"\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nHeader.propTypes = {\n  searchable: PropTypes.bool,\n  searchPlaceholderText: PropTypes.string,\n  search: PropTypes.func,\n  options: PropTypes.shape({\n    searchable: PropTypes.bool,\n  }),\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nconst defaultStyles = css`\n  --button-primary-color: #000000;\n`;\n\nconst dangerStyles = css`\n  --button-primary-color: red;\n`;\n\nconst solidStyles = css`\n  background-color: var(--button-primary-color);\n  color: white;\n`;\n\nconst outlineStyles = css`\n  background-color: transparent;\n  border: 1px solid var(--button-primary-color);\n  color: var(--button-primary-color); ;\n`;\n\nconst ghostStyles = css`\n  background-color: transparent;\n  color: var(--button-primary-color);\n`;\n\nconst iconStyles = css`\n  background-color: transparent;\n  color: var(--button-primary-color);\n  padding: 0;\n`;\n\nconst disabledStyles = css`\n  opacity: 0.4;\n  pointer-events: none;\n`;\n\nconst roundStyles = css`\n  min-width: 3rem;\n  min-height: 3rem;\n  padding: 0;\n`;\n\nconst StyledButton = styled.button`\n  border: none;\n  cursor: pointer;\n  opacity: 0.7;\n  font-weight: bold;\n  padding: 0.5rem 1.5rem;\n  border-radius: 3rem;\n\n  svg {\n    width: 1.2rem;\n  }\n\n  :hover {\n    opacity: 1;\n  }\n\n  ${() => defaultStyles}\n  ${({ importance }) => importance === 'danger' && dangerStyles}\n  ${({ variant }) => variant === 'solid' && solidStyles}\n  ${({ variant }) => variant === 'ghost' && ghostStyles}\n  ${({ variant }) => variant === 'outline' && outlineStyles}\n  ${({ variant }) => variant === 'icon' && iconStyles}\n  ${({ shape }) => shape === 'round' && roundStyles}\n  ${({ disabled }) => disabled && disabledStyles}\n`;\n\nconst Button = ({ children, variant = 'solid', ...props }) => {\n  return (\n    <StyledButton variant={variant} {...props}>\n      {children}\n    </StyledButton>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.node,\n  variant: PropTypes.oneOf(['solid', 'outline', 'ghost', 'icon']),\n  importance: PropTypes.oneOf(['danger']),\n  shape: PropTypes.oneOf(['round']),\n  disabled: PropTypes.bool,\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Wrapper = styled.div`\n  display: flex;\n\n  button {\n    margin-right: 0.5rem;\n  }\n`;\n\nconst ButtonGroup = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nButtonGroup.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n\nexport default ButtonGroup;\n","export const noop = () => {};\nexport const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst identity = (arg) => arg;\n\nconst capitalize = (str) => str.replace(/^\\w/, (c) => c.toUpperCase());\n\nconst range = (limit) => [...Array(limit + 1).keys()].slice(1);\n\nexport const FunctionUtils = { identity };\n\nexport const StringUtils = { capitalize };\n\nexport const ArrayUtils = { range };\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  ChevronLeft,\n  ChevronsLeft,\n  ChevronRight,\n  ChevronsRight,\n} from '@styled-icons/boxicons-solid';\nimport Button from 'shared/Button/Button';\nimport ButtonGroup from 'shared/ButtonGroup/ButtonGroup';\nimport { ArrayUtils } from 'utils/utils/utils';\n\nconst StyledButton = styled(Button)`\n  --button-primary-color: #1890ff;\n`;\n\nconst Pagination = ({ page, noOfpages, goto, noOfPagesToDisplay = 5 }) => {\n  const hasPrevious = page === 1;\n  const hasNext = page === noOfpages;\n\n  const getPages = () => {\n    const offset = page > noOfPagesToDisplay ? page - noOfPagesToDisplay : 0;\n    return ArrayUtils.range(noOfpages).slice(\n      offset,\n      offset + noOfPagesToDisplay\n    );\n  };\n\n  return (\n    <ButtonGroup>\n      <StyledButton\n        aria-label=\"Go to first page\"\n        onClick={() => goto(1)}\n        disabled={hasPrevious}\n        variant=\"solid\"\n        shape=\"round\"\n      >\n        <ChevronsLeft />\n      </StyledButton>\n      <StyledButton\n        aria-label=\"Go to previous page\"\n        onClick={() => goto(page - 1)}\n        disabled={hasPrevious}\n        variant=\"solid\"\n        shape=\"round\"\n      >\n        <ChevronLeft />\n      </StyledButton>\n      {getPages().map((pageNumber, i) => (\n        <StyledButton\n          aria-label={`Go to page ${pageNumber}`}\n          key={i}\n          onClick={() => goto(pageNumber)}\n          variant={page === pageNumber ? 'outline' : 'solid'}\n          shape=\"round\"\n        >\n          {pageNumber}\n        </StyledButton>\n      ))}\n      <StyledButton\n        aria-label=\"Go to next page\"\n        onClick={() => goto(page + 1)}\n        disabled={hasNext}\n        variant=\"solid\"\n        shape=\"round\"\n      >\n        <ChevronRight />\n      </StyledButton>\n      <StyledButton\n        aria-label=\"Go to last page\"\n        onClick={() => goto(noOfpages)}\n        disabled={hasNext}\n        variant=\"solid\"\n        shape=\"round\"\n      >\n        <ChevronsRight />\n      </StyledButton>\n    </ButtonGroup>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  noOfpages: PropTypes.number.isRequired,\n  noOfPagesToDisplay: PropTypes.number,\n  goto: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Pagination from 'shared/Table/Pagination/Pagination';\nimport Button from 'shared/Button/Button';\n\nconst Wrapper = styled.div`\n  display: flex;\n  padding: 1rem;\n  justify-content: space-between;\n`;\n\nconst Footer = ({\n  options,\n  page,\n  noOfpages,\n  setPage,\n  hasSelection,\n  removeSelected,\n}) => {\n  const { deletable, paginatable } = options;\n  const isTableNotEmpty = !!noOfpages;\n\n  return (\n    <Wrapper>\n      {deletable && isTableNotEmpty && (\n        <Button\n          aria-label=\"Delete selected\"\n          variant=\"solid\"\n          importance=\"danger\"\n          disabled={!hasSelection}\n          onClick={removeSelected}\n        >\n          Delete Selected\n        </Button>\n      )}\n      {paginatable && isTableNotEmpty && (\n        <Pagination page={page} noOfpages={noOfpages} goto={setPage} />\n      )}\n    </Wrapper>\n  );\n};\n\nFooter.propTypes = {\n  options: PropTypes.shape({\n    deletable: PropTypes.bool,\n    paginatable: PropTypes.bool,\n  }),\n  page: PropTypes.number,\n  noOfpages: PropTypes.number,\n  hasSelection: PropTypes.bool,\n  setPage: PropTypes.func,\n  removeSelected: PropTypes.func,\n};\n\nexport default Footer;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { Trash, Edit, Save } from '@styled-icons/boxicons-solid';\nimport ButtonGroup from 'shared/ButtonGroup/ButtonGroup';\nimport Button from 'shared/Button/Button';\nimport Input from 'shared/Input/Input';\n\nconst StyledRow = styled.tr`\n  --row-active-bg: #f2f2f2;\n\n  :hover {\n    background-color: var(--row-active-bg);\n  }\n\n  ${({ isSelected }) => isSelected && 'background-color: var(--row-active-bg);'}\n`;\n\nconst Row = ({ data, columns, options, isSelected, select, save, remove }) => {\n  const [rowData, setRowData] = useState(data);\n  const [isEditing, setIsEditing] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    setRowData(data);\n  }, [data]);\n\n  const { editable, deletable, selectable } = options || {};\n\n  const validate = () => {\n    let isValid = true;\n    const validationErrors = {};\n    columns.forEach(({ name, validate }) => {\n      const [valid, error] = (validate && validate(rowData[name])) || [true];\n      if (!valid) {\n        validationErrors[name] = error;\n        isValid = false;\n      }\n    });\n    setErrors(validationErrors);\n    return isValid;\n  };\n\n  const actions = [\n    {\n      name: isEditing ? 'Save' : 'Edit',\n      icon: isEditing ? <Save /> : <Edit />,\n      enabled: editable,\n      onClick: () => {\n        if (isEditing) {\n          if (validate()) {\n            save(rowData);\n            setIsEditing(false);\n          }\n          return;\n        }\n        setIsEditing(true);\n      },\n    },\n    {\n      name: 'Delete',\n      icon: <Trash />,\n      importance: 'danger',\n      enabled: deletable,\n      onClick: () => remove(rowData),\n    },\n  ];\n\n  const enabledActions = actions.filter(({ enabled }) => enabled);\n\n  return (\n    <StyledRow key={rowData.id} isSelected={isSelected} isEditing={isEditing}>\n      {selectable && (\n        <td>\n          <input\n            aria-label=\"Select row\"\n            type=\"checkbox\"\n            checked={isSelected}\n            onChange={(event) => select(rowData.id, event.target.checked)}\n          />\n        </td>\n      )}\n      {columns.map(({ name, type }, i) => (\n        <td key={i}>\n          <Input\n            type={type}\n            aria-label={name}\n            initialValue={rowData[name]}\n            readonly={!isEditing}\n            autoFocus={isEditing && i === 0}\n            onChange={(value) => setRowData({ ...rowData, [name]: value })}\n            error={errors[name]}\n          />\n        </td>\n      ))}\n      <td>\n        <ButtonGroup>\n          {enabledActions.map(({ name, icon, importance, onClick }, i) => (\n            <Button\n              key={i}\n              aria-label={name}\n              variant=\"icon\"\n              importance={importance}\n              onClick={onClick}\n            >\n              {icon}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </td>\n    </StyledRow>\n  );\n};\n\nRow.propTypes = {\n  data: PropTypes.shape({ id: PropTypes.string.isRequired }).isRequired,\n  columns: PropTypes.array.isRequired,\n  options: PropTypes.shape({\n    editable: PropTypes.bool,\n    deletable: PropTypes.bool,\n    selectable: PropTypes.bool,\n  }),\n  isSelected: PropTypes.bool,\n  select: PropTypes.func,\n  save: PropTypes.func,\n  remove: PropTypes.func,\n};\n\nexport default Row;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { FunctionUtils } from 'utils/utils/utils';\n\nconst HeaderRow = ({ options, columns, isSelected, selectAll }) => {\n  const [isChecked, setIsChecked] = useState(isSelected);\n  const { selectable, ...restOfOptions } = options;\n\n  const hasActions = !!Object.values(restOfOptions).some(\n    FunctionUtils.identity\n  );\n\n  useEffect(() => {\n    setIsChecked(isSelected);\n  }, [isSelected]);\n\n  return (\n    <tr>\n      {selectable && (\n        <th>\n          <input\n            type=\"checkbox\"\n            aria-label=\"Select all\"\n            checked={isChecked}\n            onChange={(event) => {\n              setIsChecked(event.target.checked);\n              selectAll(event.target.checked);\n            }}\n          />\n        </th>\n      )}\n      {columns.map((column, i) => (\n        <th key={i}>{column}</th>\n      ))}\n      {hasActions && <th>actions</th>}\n    </tr>\n  );\n};\n\nHeaderRow.propTypes = {\n  columns: PropTypes.array.isRequired,\n  isSelected: PropTypes.bool,\n  selectAll: PropTypes.func,\n  options: PropTypes.shape({\n    selectable: PropTypes.bool,\n  }),\n};\n\nexport default HeaderRow;\n","import PropTypes from 'prop-types';\nimport { useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport Header from 'shared/Table/Header/Header';\nimport Footer from 'shared/Table/Footer/Footer';\nimport Row from 'shared/Table/Row/Row';\nimport HeaderRow from 'shared/Table/HeaderRow/HeaderRow';\nimport { Center } from 'shared/Containers/Containers';\n\nconst StyledTable = styled.table`\n  text-align: left;\n  border-collapse: collapse;\n  width: 100%;\n\n  th {\n    text-transform: capitalize;\n  }\n\n  tr {\n    border-bottom: 1px solid lightgray;\n  }\n\n  td,\n  th {\n    padding: 0.75rem 1rem;\n  }\n`;\n\nconst Message = styled(Center)`\n  padding: 2rem;\n  color: gray;\n`;\n\nconst Table = ({ dataResource, columns, pageSize = 10, options = {} }) => {\n  const [data, setData] = useState(dataResource.read());\n  const [filteredData, setFilteredData] = useState(dataResource.read());\n  const [page, setPage] = useState(1);\n  const [selectedRows, setSelectedRows] = useState(new Set());\n\n  const pageData = useMemo(() => {\n    const offset = (page - 1) * pageSize;\n    return filteredData.slice(offset, offset + pageSize);\n  }, [page, pageSize, filteredData]);\n\n  const search = (searchString) => {\n    setFilteredData(\n      data.filter((row) =>\n        Object.values(row).some((cellValue) => cellValue.match(searchString))\n      )\n    );\n  };\n\n  const selectAll = (isSelected) => {\n    const selection = isSelected\n      ? new Set(pageData.map(({ id }) => id))\n      : new Set();\n    setSelectedRows(selection);\n  };\n\n  const select = (rowId, isSelected) => {\n    const selection = new Set(selectedRows);\n    isSelected ? selection.add(rowId) : selection.delete(rowId);\n    setSelectedRows(selection);\n  };\n\n  const save = (row) => {\n    setData(data.map((dataRow) => (dataRow.id === row.id ? row : dataRow)));\n  };\n\n  const remove = (row) => {\n    setData(data.filter((dataRow) => dataRow.id !== row.id));\n    setFilteredData(filteredData.filter((dataRow) => dataRow.id !== row.id));\n\n    const selection = new Set(selectedRows);\n    selection.delete(row.id);\n    setSelectedRows(selection);\n  };\n\n  const removeSelected = () => {\n    setData(data.filter((dataRow) => !selectedRows.has(dataRow.id)));\n    setFilteredData(\n      filteredData.filter((dataRow) => !selectedRows.has(dataRow.id))\n    );\n    setSelectedRows(new Set());\n  };\n\n  const columnNames = columns.map(({ name }) => name);\n\n  return (\n    <div>\n      <Header\n        searchPlaceholderText={`Search by ${columnNames.join(', ')}`}\n        search={search}\n        options={options}\n      />\n      <StyledTable>\n        <thead>\n          <HeaderRow\n            columns={columnNames}\n            isSelected={\n              !!(pageData.length && selectedRows.size === pageData.length)\n            }\n            selectAll={selectAll}\n            options={options}\n          />\n        </thead>\n        <tbody>\n          {pageData.map((row, i) => (\n            <Row\n              key={i}\n              data={row}\n              columns={columns}\n              isSelected={selectedRows.has(row.id)}\n              select={select}\n              save={save}\n              remove={remove}\n              options={options}\n            />\n          ))}\n        </tbody>\n      </StyledTable>\n      {!filteredData.length && <Message>No data to show</Message>}\n      <Footer\n        page={page}\n        noOfpages={Math.ceil(filteredData.length / pageSize)}\n        setPage={setPage}\n        hasSelection={!!selectedRows.size}\n        removeSelected={removeSelected}\n        options={options}\n      />\n    </div>\n  );\n};\n\nTable.propTypes = {\n  dataResource: PropTypes.shape({\n    read: PropTypes.func.isRequired,\n  }),\n  columns: PropTypes.array.isRequired,\n  pageSize: PropTypes.number,\n  options: PropTypes.shape({\n    editable: PropTypes.bool,\n    deletable: PropTypes.bool,\n    selectable: PropTypes.bool,\n    paginatable: PropTypes.bool,\n    searchable: PropTypes.bool,\n  }),\n};\n\nexport default Table;\n","import { StringUtils } from '../utils/utils';\n\nconst validators = {\n  isNotEmpty: (value, field) => [\n    !!(value && value.length),\n    `${StringUtils.capitalize(field || 'value')} must not be empty`,\n  ],\n  isValidEmail: (value) => {\n    const isValid =\n      /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\n        value\n      );\n    return [isValid, 'Must be a valid email address'];\n  },\n  isValidUserRole: (value) => {\n    const isValid = value && ['admin', 'member'].includes(value.toLowerCase());\n    return [!!isValid, 'Role must be admin or member'];\n  },\n};\n\nexport const getValidator = (validateFns, field) => {\n  return (value) => {\n    let result = [true];\n    validateFns.every((validateFn) => {\n      const [isValid, message] = validateFn(value, field);\n      if (!isValid) result = [false, message];\n      return isValid;\n    });\n    return result;\n  };\n};\n\nexport default validators;\n","const createResource = (promise) => {\n  let status = 'loading';\n  let result;\n\n  const suspender = promise.then(\n    (data) => {\n      status = 'success';\n      result = data;\n    },\n    (error) => {\n      status = 'error';\n      result = error;\n    }\n  );\n\n  return {\n    read() {\n      if (status === 'loading') throw suspender;\n      else if (status === 'error') throw result;\n      else return result;\n    },\n  };\n};\n\nexport const createMockResource = (data, error) => ({\n  loading: {\n    read: () => {\n      throw Promise.resolve();\n    },\n  },\n  error: {\n    read: () => {\n      throw new Error(error);\n    },\n  },\n  success: {\n    read: () => data,\n  },\n});\n\nexport default createResource;\n","import createResource from 'utils/resource/resource';\n\nconst fetchUsers = async () => {\n  const response = await fetch(\n    'https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json'\n  );\n  return await response.json();\n};\n\nexport const fetchUsersResource = () => createResource(fetchUsers());\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Center } from 'shared/Containers/Containers';\nimport { Planet } from '@styled-icons/boxicons-solid';\n\nconst Wrapper = styled(Center)`\n  width: 100%;\n  height: 100%;\n\n  div {\n    text-align: center;\n  }\n\n  h1 {\n    color: darkgray;\n  }\n  svg {\n    fill: #e5e5e5;\n  }\n`;\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  render() {\n    const { children } = this.props;\n    if (this.state.hasError) {\n      return (\n        <Wrapper>\n          <div>\n            <Planet />\n            <h1>Something went wrong</h1>\n          </div>\n        </Wrapper>\n      );\n    }\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.node,\n  retry: PropTypes.func,\n};\n\nexport default ErrorBoundary;\n","import { Suspense } from 'react';\nimport styled from 'styled-components';\nimport Spinner from 'shared/Spinner/Spinner';\nimport Table from 'shared/Table/Table';\nimport { ViewPort, Center } from 'shared/Containers/Containers';\nimport validators, { getValidator } from './utils/validators/validators';\nimport { fetchUsersResource } from 'repository/users/users';\nimport ErrorBoundary from 'shared/ErrorBoundary/ErrorBoundary';\n\nconst TableWrapper = styled.div`\n  height: 50vw;\n  min-width: 1000px;\n`;\n\nconst App = () => {\n  const userResource = fetchUsersResource();\n\n  const columns = [\n    {\n      name: 'name',\n      type: 'text',\n      validate: getValidator([validators.isNotEmpty], 'name'),\n    },\n    {\n      name: 'email',\n      type: 'email',\n      validate: getValidator([validators.isValidEmail], 'email'),\n    },\n    {\n      name: 'role',\n      type: 'text',\n      validate: getValidator([validators.isValidUserRole], 'role'),\n    },\n  ];\n\n  const options = {\n    editable: true,\n    deletable: true,\n    selectable: true,\n    paginatable: true,\n    searchable: true,\n  };\n\n  return (\n    <ViewPort>\n      <Center>\n        <TableWrapper>\n          <ErrorBoundary>\n            <Suspense fallback={<Spinner />}>\n              <Table\n                dataResource={userResource}\n                columns={columns}\n                options={options}\n              />\n            </Suspense>\n          </ErrorBoundary>\n        </TableWrapper>\n      </Center>\n    </ViewPort>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}